---
swagger: "2.0"
info:
  description: "Faz a lógica por trás do sistema FIFO"
  version: "1.1.0"
  title: "FIFO Api"
  contact:
    name: "Suporte"
    email: "souza.joaoguilherme2002@gmail.com"
  license:
    name: "MIT"
    url: "http://opensource.org/licenses/MIT"
host: "206.189.189.136:3333"
tags:
- name: "users"
  description: "Everything about users"
- name: "auth"
  description: "Access to authentication methods"
- name: "filials"
  description: "Operations about filials"
- name: "queues"
  description: "Queues methods"
- name: "platforms"
  description: "platforms methods"
schemes:
- "http"
- "https"
paths:
  /api/users:
    get:
      tags:
      - "users"
      summary: "Retorna todos os usuários"
      description: "Essa rota retorna todos os usuários"
      operationId: "indexAll"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "Busca realizada com sucesso"
          schema:
            $ref: "#/definitions/inline_response_200"
        "500":
          description: "Falha no servidor"
          schema:
            $ref: "#/definitions/inline_response_500"
      x-swagger-router-controller: "Users"
    post:
      tags:
      - "users"
      summary: "Cadastra usuário"
      description: "Essa rota faz o cadastro de usuários"
      operationId: "storeUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "user"
        required: true
        schema:
          $ref: "#/definitions/user"
      responses:
        "201":
          description: "Usuário cadastrado com sucesso"
          schema:
            $ref: "#/definitions/inline_response_201"
        "400":
          description: "Possiveis mensagens de erro na request"
          schema:
            $ref: "#/definitions/inline_response_400"
        "500":
          description: "Erro interno no servidor"
          schema:
            $ref: "#/definitions/inline_response_500"
      x-swagger-router-controller: "Users"
  /api/users/{id}:
    get:
      tags:
      - "users"
      summary: "Retorna um usuário"
      description: "Essa rota busca dados de 1 usuário"
      operationId: "index"
      produces:
      - "application/json"
      parameters:
      - name: "x-access-token"
        in: "header"
        description: "token gerado por login ou criação de usuário"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "ID of user to get the data"
        required: true
        type: "integer"
      responses:
        "200":
          description: "Busca realizada com sucesso"
          schema:
            $ref: "#/definitions/inline_response_200"
        "400":
          description: "Usuário não existente"
          schema:
            $ref: "#/definitions/inline_response_400_1"
        "500":
          description: "Falha no servidor"
          schema:
            $ref: "#/definitions/inline_response_500"
      x-swagger-router-controller: "Users"
    put:
      tags:
      - "users"
      summary: "Atualiza um usuário"
      description: "Essa rota atualiza dados de 1 usuário"
      operationId: "update"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of user to get the data before updated"
        required: true
        type: "integer"
      - name: "x-access-token"
        in: "header"
        description: "token gerado por login ou criação de usuário"
        required: true
        type: "string"
      - in: "body"
        name: "userNewData"
        required: false
        schema:
          $ref: "#/definitions/userNewData"
      responses:
        "200":
          description: "Usuário atualizado com sucesso"
          schema:
            $ref: "#/definitions/inline_response_200_1"
        "400":
          description: "Mensagens de erro"
          schema:
            $ref: "#/definitions/inline_response_400_2"
        "500":
          description: "Falha no servidor"
          schema:
            $ref: "#/definitions/inline_response_500_1"
      x-swagger-router-controller: "Users"
    delete:
      tags:
      - "users"
      summary: "Remover usuário por ID"
      operationId: "deleteById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of user to get the data before deleted"
        required: true
        type: "integer"
      - name: "x-access-token"
        in: "header"
        description: "token gerado por login ou criação de usuário"
        required: true
        type: "string"
      responses:
        "200":
          description: "Usuário deletado com sucesso"
          schema:
            $ref: "#/definitions/inline_response_200_2"
        "400":
          description: "Usuário não existente"
          schema:
            $ref: "#/definitions/inline_response_400_1"
        "500":
          description: "Falha no servidor"
          schema:
            $ref: "#/definitions/inline_response_500"
      x-swagger-router-controller: "Users"
  /api/auth:
    get:
      tags:
      - "auth"
      summary: "Valida se o usuário está na fila apartir do token"
      description: "Validação para em casos de refresh"
      operationId: "Validate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "Verifica se a autorização e valida"
          schema:
            $ref: "#/definitions/inline_response_200_3"
        "201":
          description: "Se autorização for valida e ele estiver na fila"
          schema:
            $ref: "#/definitions/inline_response_201_1"
      x-swagger-router-controller: "Auth"
    post:
      tags:
      - "auth"
      summary: "Faz autenticação do usuário"
      description: "Essa rota faz o login de usuário"
      operationId: "Authentication"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "user"
        required: true
        schema:
          $ref: "#/definitions/user_1"
      responses:
        "200":
          description: "Autenticação com usuario na fila"
          schema:
            $ref: "#/definitions/inline_response_200_4"
        "201":
          description: "Autenticação com sucesso"
          schema:
            $ref: "#/definitions/inline_response_201_2"
        "400":
          description: "Usuário não existente"
          schema:
            $ref: "#/definitions/inline_response_400_3"
        "500":
          description: "Falha no servidor"
          schema:
            $ref: "#/definitions/inline_response_500_2"
      x-swagger-router-controller: "Auth"
    delete:
      tags:
      - "auth"
      summary: "Remove token de autenticação"
      description: "Essa rota faz anula o token de login"
      operationId: "Destroy"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "Token deletado com sucesso"
          schema:
            $ref: "#/definitions/inline_response_200_5"
      x-swagger-router-controller: "Auth"
  /api/filials:
    post:
      tags:
      - "filials"
      summary: "Cria uma nova filial"
      description: "Essa rota faz a criação de uma filial"
      operationId: "storeFilial"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "filial"
        required: true
        schema:
          $ref: "#/definitions/filial"
      responses:
        "200":
          description: "Filial criada"
          schema:
            $ref: "#/definitions/inline_response_200_6"
      x-swagger-router-controller: "Filials"
  /api/platforms:
    post:
      tags:
      - "platforms"
      summary: "Cria uma nova plataforma"
      description: "Essa rota faz a criação de uma plataforma"
      operationId: "storePlatform"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "plataforma"
        required: true
        schema:
          $ref: "#/definitions/plataforma"
      responses:
        "201":
          description: "Plataforma criada"
          schema:
            $ref: "#/definitions/inline_response_201_3"
        "500":
          description: "Plataforma criada"
          schema:
            $ref: "#/definitions/inline_response_500_3"
      x-swagger-router-controller: "Platforms"
  /api/platforms/{id}:
    get:
      tags:
      - "platforms"
      summary: "Cria uma nova plataforma"
      description: "Essa rota faz a criação de uma plataforma"
      operationId: "getPlatform"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of platform to get the data"
        required: true
        type: "integer"
      responses:
        "200":
          description: "Retorno dos dados"
          schema:
            $ref: "#/definitions/inline_response_200_7"
        "404":
          description: "Plataforma não encontrada"
          schema:
            $ref: "#/definitions/inline_response_404"
        "500":
          description: "Server error"
          schema:
            $ref: "#/definitions/inline_response_500_2"
      x-swagger-router-controller: "Platforms"
  /api/queues:
    get:
      tags:
      - "queues"
      summary: "Obtem os dados da plataforma"
      description: "Essa rota retorna os dados das plataformas"
      operationId: "getAllQueueData"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "Returned with sucessfully"
          schema:
            $ref: "#/definitions/inline_response_200_8"
        "500":
          description: "Server erro"
          schema:
            $ref: "#/definitions/inline_response_500_4"
      x-swagger-router-controller: "Queues"
    post:
      tags:
      - "queues"
      summary: "Insere o usuário na fila"
      description: "Essa rota cria o registro ou atualiza o status na fila"
      operationId: "storeQueue"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "platform"
        required: true
        schema:
          $ref: "#/definitions/platform"
      - name: "x-access-token"
        in: "header"
        description: "token gerado por login ou criação de usuário"
        required: true
        type: "string"
      responses:
        "201":
          description: "User is on queue"
          schema:
            $ref: "#/definitions/inline_response_201_4"
        "500":
          description: "Server error"
          schema:
            $ref: "#/definitions/inline_response_500_5"
      x-swagger-router-controller: "Queues"
  /api/queues/exit:
    put:
      tags:
      - "queues"
      summary: "Remove o usuário da fila"
      description: "Essa rota atualiza o status na fila para 0"
      operationId: "removeQueue"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "platform"
        required: true
        schema:
          $ref: "#/definitions/platform_1"
      - name: "x-access-token"
        in: "header"
        description: "token gerado por login ou criação de usuário"
        required: true
        type: "string"
      responses:
        "201":
          description: "User is off the queue"
          schema:
            $ref: "#/definitions/inline_response_201_5"
        "500":
          description: "User or platform not found"
          schema:
            $ref: "#/definitions/inline_response_500_6"
      x-swagger-router-controller: "Queues"
  /api/queues/polling/{platform}:
    get:
      tags:
      - "queues"
      summary: "Obtem a posicao do usuario"
      description: "Essa rota retorna os dados das plataformas"
      operationId: "polling"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "platform"
        in: "path"
        description: "ID of platform to get the user position"
        required: true
        type: "integer"
      - name: "x-access-token"
        in: "header"
        description: "token gerado por login ou criação de usuário"
        required: true
        type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_9"
        "500":
          description: "server error"
          schema:
            $ref: "#/definitions/inline_response_500"
      x-swagger-router-controller: "Queues"
  /api/queues/disable-notification:
    put:
      tags:
      - "queues"
      summary: "Desativa dados da notificação"
      description: "Essa rota alterna os status do receiveEmail"
      operationId: "disable-notification"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "x-access-token"
        in: "header"
        description: "token gerado por login ou criação de usuário"
        required: true
        type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/inline_response_200_10"
        "500":
          description: "server error"
          schema:
            $ref: "#/definitions/inline_response_500_7"
      x-swagger-router-controller: "Queues"
definitions:
  inline_response_400_3:
    type: "object"
    properties:
      msg:
        type: "string"
        example: "User not autenticated"
  inline_response_200_10:
    type: "object"
    properties:
      msg:
        type: "string"
        example: "Status updated with sucessfully"
    example:
      msg: "Status updated with sucessfully"
  inline_response_500_7:
    type: "object"
    properties:
      msg:
        type: "string"
        example: "Error on request"
  inline_response_500_6:
    type: "object"
    properties:
      msg:
        type: "string"
        example: "Server error, try again!"
  inline_response_500_5:
    type: "object"
    properties:
      msg:
        type: "string"
        example: "Server error."
  inline_response_500_4:
    type: "object"
    properties:
      msg:
        type: "string"
        example: "Error on request."
  inline_response_500_3:
    type: "object"
    properties:
      msg:
        type: "string"
        example: "Failure to create"
  platform:
    type: "object"
    properties:
      platform:
        type: "integer"
        example: 1
  inline_response_500_2:
    type: "object"
    properties:
      msg:
        type: "string"
        example: "Server error"
  inline_response_500_1:
    type: "object"
    properties:
      msg:
        type: "string"
        example: "Update not available"
  user_1:
    type: "object"
    properties:
      email:
        type: "string"
        example: "email@fcamara.com.br"
      password:
        type: "string"
        example: "mypassword"
  inline_response_201:
    type: "object"
    properties:
      msg:
        type: "string"
        example: "Usuário cadastrado com sucesso"
      token:
        type: "string"
        example: "eu281r89u3tjedssd12h8ygjsa"
    example:
      msg: "Usuário cadastrado com sucesso"
      token: "eu281r89u3tjedssd12h8ygjsa"
  inline_response_200:
    type: "object"
    properties:
      id:
        type: "integer"
        example: 1
      name:
        type: "string"
        example: "João Guilherme"
      email:
        type: "string"
        example: "João Guilherme"
      id_filial:
        type: "integer"
        example: 1
    example:
      id_filial: 1
      name: "João Guilherme"
      id: 1
      email: "João Guilherme"
  inline_response_500:
    type: "object"
    properties:
      msg:
        type: "string"
        example: "Error on server"
  inline_response_400_2:
    type: "object"
    properties:
      msg:
        type: "string"
        example: "User not found"
      msgIfEmailIsNotValid:
        type: "string"
        example: "e-mail is not allowed, try again using @fcamara.com.br"
  inline_response_400:
    type: "object"
    properties:
      msg:
        type: "string"
        example: "e-mail is not allowed, try again using @fcamara.com.br"
      msgIfEmailExists:
        type: "string"
        example: "e-mail is existent, try again using other"
  inline_response_400_1:
    type: "object"
    properties:
      msg:
        type: "string"
        example: "User not found"
  platform_1:
    type: "object"
    properties:
      platform:
        type: "integer"
        example: 1
  inline_response_200_9:
    type: "object"
    properties:
      position:
        type: "integer"
        example: 6
    example:
      position: 6
  filial:
    type: "object"
    properties:
      name:
        type: "string"
        example: "Santos"
  inline_response_404:
    type: "object"
    properties:
      msg:
        type: "string"
        example: "Platform not found"
  inline_response_200_5:
    type: "object"
    properties:
      auth:
        type: "boolean"
        example: false
      token:
        type: "boolean"
        example: false
    example:
      auth: false
      token: false
  inline_response_201_4:
    type: "object"
    properties:
      msg:
        type: "string"
        example: "User is on queue"
      position:
        type: "integer"
        example: 2
      notification:
        type: "boolean"
        example: true
    example:
      msg: "User is on queue"
      notification: true
      position: 2
  inline_response_200_6:
    type: "object"
    properties:
      id:
        type: "integer"
        example: 1
      name:
        type: "string"
        example: "Santos"
      updatedAt:
        type: "string"
        example: "11/08/2020 22:10"
      createdAt:
        type: "string"
        example: "11/08/2020 22:10"
    example:
      createdAt: "11/08/2020 22:10"
      name: "Santos"
      id: 1
      updatedAt: "11/08/2020 22:10"
  inline_response_201_5:
    type: "object"
    properties:
      msg:
        type: "string"
        example: "Exited with sucessfully"
    example:
      msg: "Exited with sucessfully"
  inline_response_200_7:
    type: "object"
    properties:
      id:
        type: "integer"
        example: 1
      name:
        type: "string"
        example: "PS4"
      location:
        type: "string"
        example: "Sala Zelda"
    example:
      name: "PS4"
      location: "Sala Zelda"
      id: 1
  inline_response_200_8:
    type: "object"
    properties:
      id_platform:
        type: "integer"
        example: 2
      size:
        type: "integer"
        example: 11
    example:
      size: 11
      id_platform: 2
  userNewData:
    type: "object"
    properties:
      name:
        type: "string"
        example: "Novo Nome"
      email:
        type: "string"
        example: "Novo Email"
      password:
        type: "string"
        example: "Nova Senha"
  plataforma:
    type: "object"
    properties:
      name:
        type: "string"
        example: "PlayStation 4"
      location:
        type: "string"
        example: "Pátio"
  inline_response_200_1:
    type: "object"
    properties:
      name:
        type: "string"
        example: "Novo nome"
      email:
        type: "string"
        example: "Novo email"
      password:
        type: "string"
        example: "Nova senha"
    example:
      password: "Nova senha"
      name: "Novo nome"
      email: "Novo email"
  inline_response_200_2:
    type: "object"
    properties:
      msg:
        type: "string"
        example: "User deleted with sucess"
    example:
      msg: "User deleted with sucess"
  inline_response_201_1:
    type: "object"
    properties:
      auth:
        type: "boolean"
        example: true
      id_platform:
        type: "integer"
        example: 3
  inline_response_200_3:
    type: "object"
    properties:
      auth:
        type: "boolean"
        example: true
    example:
      auth: true
  inline_response_201_2:
    type: "object"
    properties:
      auth:
        type: "boolean"
        example: true
      token:
        type: "string"
        example: "jwttoken4981581573fhsdofjdsnfo23yr"
  inline_response_200_4:
    type: "object"
    properties:
      auth:
        type: "boolean"
        example: true
      token:
        type: "string"
        example: "jwttoken4981581573fhsdofjdsnfo23yr"
      id_platform:
        type: "integer"
        example: 2
    example:
      auth: true
      id_platform: 2
      token: "jwttoken4981581573fhsdofjdsnfo23yr"
  inline_response_201_3:
    type: "object"
    properties:
      msg:
        type: "string"
        example: "Created at success"
    example:
      msg: "Created at success"
  user:
    type: "object"
    properties:
      name:
        type: "string"
        example: "João Guilherme"
      email:
        type: "string"
        example: "emai@fcamara.com.br"
      password:
        type: "string"
        example: "mypassword"
      filial:
        type: "integer"
        example: 1
